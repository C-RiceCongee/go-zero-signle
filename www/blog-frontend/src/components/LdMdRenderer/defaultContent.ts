const content =
	"给当前api路由服务统一添加路由前缀！\n\n\n```diff\nsyntax = \"v1\"\n\ntype Request {\n\tId string `path:\"id\"`\n}\n\ntype Response {\n\tId     string `json:\"message\"`\n\tName   string `json:\"name\"`\n\tGender string `json:\"gender\"`\n}\n\n+@server (\n+\tprefix: /api/order\n+)\n\nservice api-api {\n\t@handler ApiHandler\n\tget /userinfo/:id (Request) returns (Response)\n}\n```\n\n重新生成代码\n\n```sh\n goctl api go -api order/api/api.api -dir order/api                                                             \n \norder/api/etc/api-api.yaml exists, ignored generation\norder/api/internal/config/config.go exists, ignored generation\norder/api/api.go exists, ignored generation\norder/api/internal/svc/servicecontext.go exists, ignored generation\norder/api/internal/handler/apihandler.go exists, ignored generation\norder/api/internal/logic/apilogic.go exists, ignored generation\nDone.\n```\n\norder/api/internal/handler/routes.go\n\n可以看到这个代码中已经添加了 `rest.WithPrefix(\"/api/order\"),`\n\n```go\n// Code generated by goctl. DO NOT EDIT.\npackage handler\n\nimport (\n\t\"net/http\"\n\n\t\"go-0-sd/order/api/internal/svc\"\n\n\t\"github.com/zeromicro/go-zero/rest\"\n)\n\nfunc RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {\n\tserver.AddRoutes(\n\t\t[]rest.Route{\n\t\t\t{\n\t\t\t\tMethod:  http.MethodGet,\n\t\t\t\tPath:    \"/userinfo/:id\",\n\t\t\t\tHandler: ApiHandler(serverCtx),\n\t\t\t},\n\t\t},\n\t\trest.WithPrefix(\"/api/order\"),\n\t)\n}\n\n```\n\n请求测试一下\n\n```sh\ncurl http://127.0.0.1:8888/api/order/userinfo/1                                                                 \n\n{\"code\":0,\"msg\":\"OK\",\"data\":{\"message\":\"1123\",\"name\":\"user from user rpc\",\"gender\":\"男\"}}%            \n```\n\n"
export default content
